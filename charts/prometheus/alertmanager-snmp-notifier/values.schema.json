{
  "$schema": "http://json-schema.org/draft-07/schema",
  "definitions": {
    "image": {
      "additionalProperties": false,
      "description": "Container image parameters.",
      "properties": {
        "pullPolicy": {
          "default": "IfNotPresent",
          "description": "Image pull policy. Defaults to Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated.",
          "enum": [
            "Never",
            "IfNotPresent",
            "Always"
          ],
          "type": "string"
        },
        "repository": {
          "description": "Image repository. Path to the image with registry(quay.io) or without(maxwo/snmp-notifier) for docker.io.",
          "type": "string"
        },
        "tag": {
          "default": "",
          "description": "Use chart appVersion by default.",
          "type": "string"
        }
      },
      "required": [
        "repository"
      ],
      "type": "object"
    },
    "resources": {
      "description": "Resource limits and requests for the Container.",
      "properties": {
        "limits": {
          "description": "Resource limits for the Container.",
          "properties": {
            "cpu": {
              "description": "CPU request for the Container.",
              "type": "string"
            },
            "memory": {
              "description": "Memory request for the Container.",
              "type": "string"
            }
          },
          "type": "object"
        },
        "requests": {
          "description": "Resource requests for the Container.",
          "properties": {
            "cpu": {
              "description": "CPU request for the Container.",
              "type": "string"
            },
            "memory": {
              "description": "Memory request for the Container.",
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "securityContext": {
      "description": "Security context for the container.",
      "properties": {
        "capabilities": {
          "description": "Specifies the capabilities to be dropped by the container.",
          "properties": {
            "drop": {
              "description": "List of capabilities to be dropped.",
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          "type": "object"
        },
        "readOnlyRootFilesystem": {
          "description": "Specifies whether the root file system should be mounted as read-only.",
          "type": "boolean"
        },
        "runAsGroup": {
          "description": "Specifies the GID (Group ID) to run the container as.",
          "type": "integer"
        },
        "runAsNonRoot": {
          "description": "Specifies whether to run the container as a non-root user.",
          "type": "boolean"
        },
        "runAsUser": {
          "description": "Specifies the UID (User ID) to run the container as.",
          "type": "integer"
        }
      },
      "type": "object"
    }
  },
  "description": "An Alertmanager webhook that relays alerts as SNMP traps.",
  "properties": {
    "affinity": {
      "description": "Affinity rules for pod assignment.",
      "type": "object"
    },
    "autoscaling": {
      "description": "Configuration for autoscaling the resource based on resource utilization.",
      "properties": {
        "enabled": {
          "description": "Specifies whether autoscaling is enabled.",
          "type": "boolean"
        },
        "maxReplicas": {
          "description": "Maximum number of replicas for the resource.",
          "type": "integer"
        },
        "minReplicas": {
          "description": "Minimum number of replicas for the resource.",
          "type": "integer"
        },
        "targetCPUUtilizationPercentage": {
          "description": "Target CPU utilization percentage for autoscaling.",
          "maximum": 100,
          "minimum": 0,
          "type": "integer"
        },
        "targetMemoryUtilizationPercentage": {
          "description": "Target memory utilization percentage for autoscaling.",
          "maximum": 100,
          "minimum": 0,
          "type": "integer"
        }
      },
      "type": "object"
    },
    "fullnameOverride": {
      "default": "",
      "description": "Override value for the fully qualified app name.",
      "type": "string"
    },
    "image": {
      "$ref": "#/definitions/image",
      "description": "Container image parameters."
    },
    "imagePullSecrets": {
      "default": [],
      "description": "The property allows you to configure multiple image pull secrets.",
      "items": {
        "properties": {
          "name": {
            "description": "Specifies the Secret name of the image pull secret.",
            "type": "string"
          }
        },
        "required": [
          "name"
        ],
        "type": "object"
      },
      "type": "array"
    },
    "ingress": {
      "description": "Ingress configuration.",
      "properties": {
        "annotations": {
          "description": "Annotations to add to the Ingress.",
          "type": "object"
        },
        "className": {
          "description": "Ingress class name.",
          "type": "string"
        },
        "enabled": {
          "description": "Indicates if Ingress is enabled.",
          "type": "boolean"
        },
        "hosts": {
          "description": "Host and path configuration for the Ingress.",
          "items": {
            "properties": {
              "host": {
                "description": "Host name for the Ingress.",
                "type": "string"
              },
              "paths": {
                "description": "Path configuration for the Ingress.",
                "items": {
                  "properties": {
                    "path": {
                      "description": "Path for the Ingress.",
                      "type": "string"
                    },
                    "pathType": {
                      "description": "Path type for the Ingress.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              }
            },
            "type": "object"
          },
          "type": "array"
        },
        "tls": {
          "description": "TLS configuration for the Ingress.",
          "items": {
            "properties": {
              "hosts": {
                "description": "Host names for the TLS configuration.",
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              "secretName": {
                "description": "Name of the secret for TLS.",
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "nameOverride": {
      "default": "",
      "description": "Override value for the name of the Helm chart.",
      "type": "string"
    },
    "nodeSelector": {
      "description": "Node selector for pod assignment.",
      "type": "object"
    },
    "podAnnotations": {
      "description": "Annotations to add to the pods.",
      "type": "object"
    },
    "podSecurityContext": {
      "description": "Pod security context configuration.",
      "properties": {
        "fsGroup": {
          "default": 65534,
          "description": "The fsGroup value for the pod's security context.",
          "type": "integer"
        },
        "runAsGroup": {
          "description": "The GID to run the pod's containers as.",
          "type": "integer"
        },
        "runAsUser": {
          "description": "The UID to run the pod's containers as.",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "replicaCount": {
      "default": 1,
      "description": "Number of desired pods.",
      "minimum": 0,
      "type": "integer"
    },
    "resources": {
      "$ref": "#/definitions/resources",
      "description": "Resource limits and requests for the pod."
    },
    "securityContext": {
      "$ref": "#/definitions/securityContext",
      "description": "Security context for the container."
    },
    "service": {
      "description": "Service configuration.",
      "properties": {
        "port": {
          "description": "Port number for the service.",
          "type": "integer"
        },
        "type": {
          "description": "Service type.",
          "type": "string"
        }
      },
      "required": [
        "type",
        "port"
      ],
      "type": "object"
    },
    "serviceAccount": {
      "description": "Contains properties related to the service account configuration.",
      "properties": {
        "annotations": {
          "default": {},
          "description": "Annotations to add to the service account.",
          "type": "object"
        },
        "create": {
          "default": true,
          "description": "Specifies whether a service account should be created.",
          "type": "boolean"
        },
        "name": {
          "default": "",
          "description": "The name of the service account to use. If not set and create is true, a name is generated using the fullname template.",
          "type": "string"
        }
      },
      "required": [
        "create"
      ],
      "type": "object"
    },
    "serviceMonitor": {
      "description": "Configuration for ServiceMonitor",
      "properties": {
        "enabled": {
          "description": "Specifies whether to enable ServiceMonitor for scraping",
          "type": "boolean"
        },
        "interval": {
          "description": "Frequency at which Prometheus should scrape",
          "type": "string"
        },
        "labels": {
          "description": "Labels for the ServiceMonitor",
          "type": "object"
        },
        "metricRelabelings": {
          "description": "MetricRelabelConfigs to apply to samples before ingestion",
          "items": {
            "type": "object"
          },
          "type": "array"
        },
        "namespace": {
          "description": "Namespace where the ServiceMonitor should be deployed",
          "type": "string"
        },
        "relabelings": {
          "description": "Relabeling configurations as per Prometheus documentation",
          "items": {
            "type": "object"
          },
          "type": "array"
        },
        "targetLabels": {
          "description": "Set of labels to transfer from the Kubernetes Service onto the target",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "telemetryPath": {
          "description": "Path to the cloudwatch-exporter telemetry endpoint",
          "type": "string"
        },
        "timeout": {
          "description": "Scrape timeout",
          "type": "string"
        }
      },
      "type": "object"
    },
    "snmpNotifier": {
      "description": "SNMP notifier configuration.",
      "properties": {
        "extraArgs": {
          "description": "Extra arguments for snmp_notifier executable.",
          "items": {
            "pattern": "^--*",
            "type": "string"
          },
          "type": "array"
        },
        "snmpDestinations": {
          "description": "The list of SNMP servers to send the traps to.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "snmpTemplates": {
          "description": "Allows to customize the description of the traps, and add extra trap fields.",
          "properties": {
            "description": {
              "type": "string"
            },
            "extraFields": {
              "type": "array"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "tolerations": {
      "description": "Tolerations for pod assignment.",
      "type": "array"
    }
  },
  "required": [
    "image",
    "snmpNotifier",
    "serviceAccount",
    "replicaCount",
    "service"
  ],
  "title": "alertmanager-snmp-notifier",
  "type": "object"
}
