---
#  Source: /mnt/c/repository/HelmfileExamples/helmfile.yaml

#   What is a helmfile? Read here...
#   https://github.com/helmfile/helmfile
#   Examples: https://github.com/helmfile/helmfile/blob/main/examples/charts/argocd-helmfile-deployment/helmfile.yaml

# Before deployment, export the required env vars
# export HELM_SECRETS_DRIVER=vault

# Commands to deploy:
# helmfile deps  # < download dependencies
# helmfile template  # < template stuff. You might have to be signed into vault
# helmfile sync  # < deploy everything
# helmfile apply  # < deploy diff only
# helmfile destroy  # < deploy diff only
filepath: helmfile.yaml
helmBinary: helm
# kustomizeBinary: kustomize
helmDefaults:
  # verify: false
  # enableDNS: false
  # waitForJobs: false
  timeout: 30
  # skipDeps: false
  # reuseValues: false
  # deleteWait: false
  # deleteTimeout: 0
repositories:
  - name: airflow
    url: https://charts.bitnami.com/bitnami
releases:
  - name: airflow
    namespace: default
    createNamespace: true
    chart: bitnami/airflow
    labels:
      app.kubernetes.io/name: airflow
    # version: 17.0.2
    # missingFileHandler: Warn  # set to either "Error" or "Warn". "Error" instructs helmfile to fail when unable to find a values or secrets file. When "Warn", it prints the file and continues.
    # verify: true
    timeout: 30
    cleanupOnFail: true
    values:
      - ../chartsValues/values-{{`{{ .Release.Name }}`}}.yaml
      - postgresql:
          enabled: false
      #     auth:
      #       username: adminuser
      #       password: '12345'
      #       database: airflow
      - externalDatabase:
          host: 192.168.50.50
          port: 5432
          user: adminuser
          password: '12345'
          database: airflow
      - redis:
          enabled: false
      - externalRedis:
          host: 192.168.50.50
          port: 6379
      - auth:
          username: adminuser
          password: '12345'
      - ingress:
          enabled: false
          hostname: airflow.localhost
      - service:
          type: LoadBalancer
          ports:
            http: 8083
